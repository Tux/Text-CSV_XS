.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STDIN 1"
.TH STDIN 1 "2022-06-21" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
csv2xlsx \- Convert CSV to Excel 2007+
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& csv2xlsx [options] [file.csv]
\&
\& csv2xlsx test.csv
\&
\& csv2xlsx \-f \-o merged.xlsx \-m foobar*.csv
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This tool converts \s-1CSV\s0 data to Excel\-2007+. It can convert the \s-1CSV\s0 into a
single sheet, merge \s-1CSV\s0 files into multiple sheets in a workbook or split
a single \s-1CSV\s0 into multiple sheets.
.PP
The tool supports encoding, formula handle, date conversion and some more.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-s S" 2
.IX Item "-s S"
.PD 0
.IP "\-\-sep=S" 2
.IX Item "--sep=S"
.PD
use \f(CW\*(C`S\*(C'\fR as separator character, auto-detect, default = \f(CW\*(C`,\*(C'\fR.
.Sp
The literal string \f(CW\*(C`tab\*(C'\fR is allowed.
.IP "\-q Q" 2
.IX Item "-q Q"
.PD 0
.IP "\-\-quo=Q" 2
.IX Item "--quo=Q"
.PD
use \f(CW\*(C`Q\*(C'\fR as quotation character, auto-detect, default = \f(CW\*(C`"\*(C'\fR.
.Sp
The literal string \f(CW\*(C`undef\*(C'\fR is allowed to disable quotation.
.IP "\-e E" 2
.IX Item "-e E"
.PD 0
.IP "\-\-esc=E" 2
.IX Item "--esc=E"
.PD
use \f(CW\*(C`E\*(C'\fR as escape character, auto-detect, default = \f(CW\*(C`"\*(C'\fR.
.Sp
The literal string \f(CW\*(C`undef\*(C'\fR is allowed to disable escapes.
.IP "\-w W" 2
.IX Item "-w W"
.PD 0
.IP "\-\-width=W" 2
.IX Item "--width=W"
.PD
Set column width. Default is to auto-size per column per sheet with a
minimum width of \f(CW4\fR.
.IP "\-o \s-1FILE\s0.xlsx" 2
.IX Item "-o FILE.xlsx"
.PD 0
.IP "\-x \s-1FILE\s0.xlsx" 2
.IX Item "-x FILE.xlsx"
.IP "\-\-out=FILE.xlsx" 2
.IX Item "--out=FILE.xlsx"
.PD
Specify the output filename. Default it the same name as the input-file
where the trailing \f(CW\*(C`.csv\*(C'\fR will be replaced with \f(CW\*(C`.xlsx\*(C'\fR.
.Sp
If a filename can not be automatically generated, it will default to
\&\f(CW\*(C`csv2xlsx.xlsx\*(C'\fR.
.IP "\-d format" 2
.IX Item "-d format"
.PD 0
.IP "\-\-date\-fmt=format" 2
.IX Item "--date-fmt=format"
.PD
Use \f(CW\*(C`format\*(C'\fR as date formats. Default = \f(CW\*(C`dd\-mm\-yyyy\*(C'\fR.
.IP "\-D range" 2
.IX Item "-D range"
.PD 0
.IP "\-\-date\-col=range" 2
.IX Item "--date-col=range"
.PD
Only convert dates in columns \f(CW\*(C`range\*(C'\fR. Default is everywhere.
.Sp
Ranges are numeric, where the first column has index \f(CW1\fR. A range is a
definition of sections joined by \f(CW\*(C`,\*(C'\fRs. A section is either a single column
or a start/finish\-pair joined with a dash. A missing finish index on the
last segment is an open range (till the end of the line).
.Sp
If the range is \f(CW0\fR, date conversion is disabled.
.Sp
.Vb 3
\& \-D 0
\& \-D 1,2,6
\& \-D 2,4\-8,12\-
.Ve
.IP "\-C format" 2
.IX Item "-C format"
.PD 0
.IP "\-\-curr\-fmt=format" 2
.IX Item "--curr-fmt=format"
.PD
Use \f(CW\*(C`format\*(C'\fR as currency formats for currency <C>, no default.
.Sp
.Vb 1
\& \-C \*(Aq$:### ### ##0.00\*(Aq
.Ve
.IP "\-f" 2
.IX Item "-f"
.PD 0
.IP "\-\-force" 2
.IX Item "--force"
.PD
Force usage of the output file if it already exists (unlink before use).
.IP "\-F" 2
.IX Item "-F"
.PD 0
.IP "\-\-formulas" 2
.IX Item "--formulas"
.PD
Allow formula's. Otherwise fields starting with an equal sign \f(CW\*(C`=\*(C'\fR are
forced to string type.
.Sp
There are several shortcuts here to specify different behavior:
.RS 2
.IP "\-\-Fa=a" 2
.IX Item "--Fa=a"
Define formula action: \f(CW\*(C`none\*(C'\fR/\f(CW\*(C`die\*(C'\fR/\f(CW\*(C`croak\*(C'\fR/\f(CW\*(C`diag\*(C'\fR/\f(CW\*(C`empty\*(C'\fR/\f(CW\*(C`undef\*(C'\fR
.IP "\-\-Ft" 2
.IX Item "--Ft"
Formula's will be stored as text (formula actions: none)
.IP "\-\-Fd" 2
.IX Item "--Fd"
Formula's will cause a die
.IP "\-\-Fc" 2
.IX Item "--Fc"
Formula's will cause a croak
.IP "\-\-FD" 2
.IX Item "--FD"
Formula's will cause a warning (this is the default)
.IP "\-\-Fe" 2
.IX Item "--Fe"
Formula's will be replaced by the empty string
.IP "\-\-Fu" 2
.IX Item "--Fu"
Formula's will be replaced with an undefined cell
.RE
.RS 2
.RE
.IP "\-u" 2
.IX Item "-u"
.PD 0
.IP "\-\-utf\-8" 2
.IX Item "--utf-8"
.IP "\-\-utf8" 2
.IX Item "--utf8"
.PD
\&\s-1CSV\s0 is \s-1UTF\-8\s0 encoded. Likely not needed, as most is auto-detected.
.IP "\-\-de" 2
.IX Item "--de"
.PD 0
.IP "\-\-fix\-utf8" 2
.IX Item "--fix-utf8"
.PD
Attempt to fix double-encoded \s-1UTF\-8.\s0 e.g. \f(CW\*(C`\ex{00c3}\ex{00ab}\*(C'\fR should have
been \f(CW\*(C`\ex0100}\*(C'\fR. \s-1YMMV.\s0
.IP "\-m" 2
.IX Item "-m"
.PD 0
.IP "\-\-merge" 2
.IX Item "--merge"
.PD
Merge multiple \s-1CSV\s0's into a single Excel (separate sheets).
.Sp
With this option, the option \f(CW\*(C`\-o\*(C'\fR is required. All arguments should be
existing files. Piping is not supported.
.IP "\-L N" 2
.IX Item "-L N"
.PD 0
.IP "\-\-row\-limit=N" 2
.IX Item "--row-limit=N"
.PD
Limit export to \f(CW\*(C`N\*(C'\fR rows.
.IP "\-S CxP" 2
.IX Item "-S CxP"
.PD 0
.IP "\-\-split=CxP" 2
.IX Item "--split=CxP"
.PD
When dealing with big \s-1CSV\s0 datasets, it this option enables you to split the
data over several sheets. When all the \f(CW\*(C`\-S\*(C'\fR options match is a single row,
that row will be the first row of a new sheet. (see also \f(CW\*(C`\-\-sl=C\*(C'\fR)
.RS 2
.IP "C" 2
.IX Item "C"
The column that should be examined. \f(CW\*(C`A\*(C'\fR = \f(CW1\fR. If lower case, the value
of that column is matched case insensitive when appropriate.
.Sp
.Vb 3
\& \-S 7=ab      Column G is literal "ab"
\& \-S G=ab      Column G is literal "ab"
\& \-S g=ab      Column G is literal "ab", or "aB", or "Ab", or "AB"
.Ve
.IP "x" 2
.IX Item "x"
Defines the operation on the column
.RS 2
.IP "=" 2
Literal match
.Sp
.Vb 2
\& \-S G=ab      Column G is literal "ab"
\& \-S g=ab      Column G is literal "ab", or "aB", or "Ab", or "AB"
.Ve
.IP "/" 2
Regex match
.Sp
.Vb 2
\& \-S G/b[a\-z]  Column G matches /b[a\-z]/
\& \-S g/b[a\-z]  Column G matches /b[a\-z]/i
.Ve
.IP "u U" 2
.IX Item "u U"
Check for defined
.Sp
.Vb 2
\& \-S Gu        Column G is undefined
\& \-S GU        Column G is defined
.Ve
.Sp
Similar for emptiness
.Sp
.Vb 2
\& \-S G=        Column G is defined but empty
\& \-S G/.       Column G is defined and not empty
.Ve
.IP "< >" 2
Compare. If the value in the column is defined compare. If the values only
holds digits, do a numeric compare, otherwise do a string compare.
.Sp
.Vb 2
\& \-S G<42      Column G is defined and less than 42 (numeric)
\& \-S G<ab      Column G is defined and less than 42 (string)
\&
\& \-S G>42      Column G is defined and greater than 42 (numeric)
\& \-S G>ab      Column G is defined and greater than 42 (string)
.Ve
.RE
.RS 2
.RE
.IP "P" 2
.IX Item "P"
pattern or literal string. Quotation might be required differing per \s-1OS\s0 and
shell-environment.
.RE
.RS 2
.RE
.IP "\-\-sl=C" 2
.IX Item "--sl=C"
When splitting with \f(CW\*(C`\-S\*(C'\fR / \f(CW\*(C`\-\-split\*(C'\fR, if all criteria match and a new
sheet is to be created, use the value in column \f(CW\*(C`C\*(C'\fR of the matching row
as new sheet label.
.IP "\-v [V]" 2
.IX Item "-v [V]"
.PD 0
.IP "\-\-verbose[=V]" 2
.IX Item "--verbose[=V]"
.PD
Set verbosity level. Default = 1. No argument will set to 2.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
csv2xls \- Convert \s-1CSV\s0 to old Excel
.SH "AUTHOR"
.IX Header "AUTHOR"
H.Merijn Brand
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
.Vb 1
\& Copyright (C) 2016\-2022 H.Merijn Brand.  All rights reserved.
.Ve
.PP
This library is free software;  you can redistribute and/or modify it under
the same terms as Perl itself.
